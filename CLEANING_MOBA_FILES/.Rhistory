pwrs1
pwrs2
EFS
length(EFS)
SIM
SIM
ALF
LAF=0.05
ALF=0.05
pwrs1=rep(NA,length(EFS)) # create a data collector
pwrs2=rep(NA,length(EFS)) # create a data collector
for (ff in 1:length(EFS)) {
pt1=rep(NA,SIM) # two sided
pt2=rep(NA,SIM) # cases have higher
for (i in 1:SIM) {
D1=rnorm(N1,mean=0)
D2=rnorm(N2,mean=EFS[ff])
pt1[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
pt2[i]=(t.test(D1,D2,alternative="less")$p.value <= ALF)
}
pwrs1[ff]=sum(pt1)/length(pt1) # save the power estimate
pwrs2[ff]=sum(pt2)/length(pt2) # save the power estimate
}
pwrs1
par(mfrow=c(1,1))
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
lines(pwrs1~EFS,col=i,lwd=2)
lines(pwrs2~EFS,col=i,lwd=2)
abline(h=0.8,lty=2)
legend(x=max(EFS)*0.8,y=0.4,legend=c(1,2),pch=rep(19,2),col=seq(2),title="sample size")
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
ALF=.05 # the level of significance (alpha level)
SIM=1000 # number of simulations for each point on graph
EFS=seq(0,2,by=.1) # the various values of effect sizes
SZS=seq(50,250,by=50) # the various sizes of the sample size
FR 1=.5 # fraction of cases among the whole group
# create a data collector
m=matrix(NA,nc=length(SZS),nr=length(EFS))
for (nn in 1:length(SZS)) {
N1=floor(SZS[nn]*FR)
N2=SZS[nn]-N1
for (ff in 1:length(EFS)) {
# p.value test
pt=rep(NA,SIM)
for (i in 1:SIM) {
D1=rnorm(N1,mean=0)
D2=rnorm(N2,mean=EFS[ff])
pt[i]=(t.test(D1,D2,alternative="less")$p.value <= ALF)
}
m[ff,nn]=sum(pt)/length(pt) # save the power estimate
}
}
ALF=.05 # the level of significance (alpha level)
SIM=1000 # number of simulations for each point on graph
EFS=seq(0,2,by=.1) # the various values of effect sizes
SZS=seq(50,250,by=50) # the various sizes of the sample size
FR=.5 # fraction of cases among the whole group
# create a data collector
m=matrix(NA,nc=length(SZS),nr=length(EFS))
for (nn in 1:length(SZS)) {
N1=floor(SZS[nn]*FR)
N2=SZS[nn]-N1
for (ff in 1:length(EFS)) {
# p.value test
pt=rep(NA,SIM)
for (i in 1:SIM) {
D1=rnorm(N1,mean=0)
D2=rnorm(N2,mean=EFS[ff])
pt[i]=(t.test(D1,D2,alternative="less")$p.value <= ALF)
}
m[ff,nn]=sum(pt)/length(pt) # save the power estimate
}
}
# plot the background
par(mfrow=c(1,1))
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
for (i in 1:length(SZS)) lines(m[,i]~EFS,col=i,lwd=2)
abline(h=0.8,lty=2)
legend(x=max(EFS)*0.8,y=0.4,legend=SZS,pch=rep(19,length(SZS)),col=seq(length(SZS)),title="sample size")
#grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
80/65
80/65*42
80/65*14
N10=42
N11=52
N20=14
N21=17
length(EFS)
SIM=1000 # number of simulations for each point on graph
EFS=seq(0,2,by=.1) # the various values of effect sizes
ALF=0.05
N10=42
N11=52
N20=14
N21=17
for (z in 1:2) {
pwrs1=rep(NA,length(EFS))
pwrs2=rep(NA,length(EFS))
for (ff in 1:length(EFS)) {
pt1=rep(NA,SIM) # now
pt2=rep(NA,SIM) # in 1 year
for (i in 1:SIM) {
D1=rnorm(N10,mean=0)
D2=rnorm(N20,mean=EFS[ff])
pt1[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
D1=rnorm(N11,mean=0)
D2=rnorm(N21,mean=EFS[ff])
pt2[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
}
pwrs1[ff]=sum(pt1)/length(pt1) # save the power estimate
pwrs2[ff]=sum(pt2)/length(pt2) # save the power estimate
}
}
SIM=1000 # number of simulations for each point on graph
EFS=seq(0,2,by=.1) # the various values of effect sizes
ALF=0.05
N10=42
N11=52
N20=14
N21=17
pwrs1=rep(NA,length(EFS))
pwrs2=rep(NA,length(EFS))
for (ff in 1:length(EFS)) {
pt1=rep(NA,SIM) # now
pt2=rep(NA,SIM) # in 1 year
for (i in 1:SIM) {
D1=rnorm(N10,mean=0)
D2=rnorm(N20,mean=EFS[ff])
pt1[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
D1=rnorm(N11,mean=0)
D2=rnorm(N21,mean=EFS[ff])
pt2[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
}
pwrs1[ff]=sum(pt1)/length(pt1) # save the power estimate
pwrs2[ff]=sum(pt2)/length(pt2) # save the power estimate
}
par(mfrow=c(1,1))
pwrs2
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
lines(pwrs1~EFS,col=i,lwd=2)
lines(pwrs2~EFS,col=i,lwd=2)
abline(h=0.8,lty=2)
legend(x=max(EFS)*0.8,y=0.4,legend=c(1,2),pch=rep(19,2),col=seq(2),title="sample size")
#grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
par(mfrow=c(1,1))
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
lines(pwrs1~EFS,col=i,lwd=2)
lines(pwrs2~EFS,col=i,lwd=2)
abline(h=0.8,lty=2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
lines(pwrs1~EFS,col="green",lwd=2)
lines(pwrs2~EFS,col="red",lwd=2)
abline(h=0.8,lty=2)
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
legend(x=max(EFS)*0.8,y=0.4,legend=c("now","in a year"),pch=rep(19,2),col=seq(2))
legend(x=max(EFS)*0.8,y=0.4,legend=c("now","in a year"),pch=rep(19,2),col=seq(2)+1)
legend(x=max(EFS)*0.8,y=0.4,legend=c("now","in a year"),pch=rep(19,2),col=c("green","red"))
SIM=1000 # number of simulations for each point on graph
EFS=seq(0,2,by=.03) # the various values of effect sizes
ALF=0.05
N10=42
N11=52
N20=14
N21=17
pwrs1=rep(NA,length(EFS))
pwrs2=rep(NA,length(EFS))
for (ff in 1:length(EFS)) {
pt1=rep(NA,SIM) # now
pt2=rep(NA,SIM) # in 1 year
for (i in 1:SIM) {
D1=rnorm(N10,mean=0)
D2=rnorm(N20,mean=EFS[ff])
pt1[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
D1=rnorm(N11,mean=0)
D2=rnorm(N21,mean=EFS[ff])
pt2[i]=(t.test(D1,D2,alternative="two")$p.value <= ALF)
}
pwrs1[ff]=sum(pt1)/length(pt1) # save the power estimate
pwrs2[ff]=sum(pt2)/length(pt2) # save the power estimate
}
# plot the background
par(mfrow=c(1,1))
plot(NA,xlim=c(min(EFS),max(EFS)),ylim=c(0,1),xlab="effect size",ylab="power")
lines(pwrs1~EFS,col="green",lwd=2)
lines(pwrs2~EFS,col="red",lwd=2)
abline(h=0.8,lty=2)
legend(x=max(EFS)*0.8,y=0.4,legend=c("now","in a year"),pch=rep(19,2),col=c("green","red"))
#grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
grid(nx = NULL, ny = NULL, col = "lightgray", lty = "dotted")
?txtProgressBar()
testit <- function(x = sort(runif(20)), ...)
{
pb <- txtProgressBar(...)
for(i in c(0, x, 1)) {Sys.sleep(0.5); setTxtProgressBar(pb, i)}
Sys.sleep(1)
close(pb)
}
testit()
testit(runif(10))
testit(style = 3)
testit(style = 2)
testit(style = 1)
testit(style = 4)
txtProgressBar()
txtProgressBar(...)
N=1e6
all=sample(c(0,1),N,prob=c(0.4,0.6),replace=T)
frs=rep(NA,1000)
for (i in 1:1000) {
sam=sample(all,50,replace=F)
a0=table(sam)[1]
a1=table(sam)[2]
frs[i]=a1/(a0+a1)
}
hist(frs,breaks=100,col="grey")
CENTR=as.numeric(table(all)[2]/(table(all)[1]+table(all)[2]))
abline(v=CENTR,col="red")
N=1e6
N=1e6
all=rnorm(N)
sam=sample(all,50,replace=F)
sd(sam)
n=100
sam=sample(all,n,replace=F)
sd(sam)
sd(sam)/(n^(1/2))
mean(sam)
?qnorm
qnorm(0.05)
pnorm(0.05)
qnorm(0.05)
qnorm(0.95)
qnorm(0.66)
qnorm(0.67)
qnorm(0.7)
qnorm(0.99)
qnorm(0.95)
qnorm(0.954)
qnorm(0.954,lower.tail=T)
qnorm(0.954,lower.tail=F)
qnorm(0.954,mean=0,sd=1)
pnorm(2)
1-pnorm(2)
fs=sd(sam)/(n^(1/2))*2/2
fs
s=100
seq(s)
dat=data.frame(rw=seq(s),NA)
dat
dat=data.frame(rw=seq(s),left=NA,right=NA)
dat
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*2/2
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
dat
min(dat$left)
plot(NA,xlim=c(min(dat$left),max(dat$left)),ylim=c(0,100))
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
?segment
?segments
dat=data.frame(rw=seq(s),left=NA,right=NA)
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*2/2
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
segments(x0=mn-fs,x1=mn+fs,y0=i,y1=i)
}
segments(x0=mn-fs,x1=mn+fs,y0=i,y1=i)
segments(x0=mn-fs,x1=mn+fs,y0=i,y1=i)
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*2/2
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
for (i in 1:s) {
print(i)
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*2/2
segments(x0=mn-fs,x1=mn+fs,y0=i,y1=i)
}
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$left)*1.5),ylim=c(0,100))
for (i in 1:s) {
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i)
}
min(dat$left)
plot(NA,xlim=c(min(dat$left)*1.5,max(dat$right)*1.5),ylim=c(0,100))
for (i in 1:s) {
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i)
}
mean(dat$left)
apply(dat[,2:3],1,mean)
abline(v=mean(mns),col="red")
mns=apply(dat[,2:3],1,mean)
abline(v=mean(mns),col="red")
abline(v=mean(all),col="green")
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i)
}
mns=apply(dat[,2:3],1,mean)
abline(v=mean(mns),col="red")
abline(v=mean(all),col="green")
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
abline(v=EMN,col="red")
abline(v=EMN,col="green")
abline(v=RMN,col="red")
abline(v=EMN,col="green")
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
abline(v=RMN,col="red")
abline(v=EMN,col="green")
table((dat[,2]<=RMN)&(dat[,3]>=RMN))
lwd=(dat[i,2]<=RMN)&(dat[i,3]>=RMN)+1
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=(dat[i,2]<=RMN)&(dat[i,3]>=RMN)+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
mns=apply(dat[,2:3],1,mean)
EMN=mean(mns) # estimated mean
RMN=mean(all) # real mean
lwd
lwd=(dat[i,2]<=RMN)&(dat[i,3]>=RMN)+1
lwd
(dat[i,2]<=RMN)&(dat[i,3]>=RMN)
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
CRF=1.96  # critical factor
CRF=1.96  # critical factor
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*CRF/2
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
table((dat[,2]<=RMN)&(dat[,3]>=RMN))
tb=table((dat[,2]<=RMN)&(dat[,3]>=RMN))
tb[2]
sum(tb)
tb[2]/(sum(tb))
N=1e6
n=100
s=100
z=1.96  # z value
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*z
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
tb=table((dat[,2]<=RMN)&(dat[,3]>=RMN))
tb[2]/(sum(tb))
N=1e6
n=200
s=100
z=1.96  # z value
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*z
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
N=1e6
n=500
s=100
z=1.96  # z value
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*z
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
seq(100,600,by=100)
par(mfrow=c(2,3))
for( n in seq(100,600,by=100)) {
N=1e6
#n=500
s=100
z=1.96  # z value
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*z
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
#plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
plot(NA,xlim=c(-2,2),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
}
par(mfrow=c(2,3))
for( n in seq(100,600,by=100)) {
N=1e6
#n=500
s=100
z=1.96  # z value
all=rnorm(N)
dat=data.frame(rw=seq(s),left=NA,right=NA)
for (i in 1:s) {
sam=sample(all,n,replace=F)
mn=mean(sam)
fs=sd(sam)/(n^(1/2))*z
dat[i,"left"]=mn-fs
dat[i,"right"]=mn+fs
}
mns=apply(dat[,2:3],1,mean)
RMN=mean(all) # real mean
EMN=mean(mns) # estimated mean
#plot(NA,xlim=c(min(dat$left)*2,max(dat$right)*2),ylim=c(0,100))
plot(NA,xlim=c(-.5,.5),ylim=c(0,100))
for (i in 1:s) {
lwd=as.numeric((dat[i,2]<=RMN)&(dat[i,3]>=RMN))+1
segments(x0=dat[i,2],x1=dat[i,3],y0=i,y1=i,lwd=lwd)
}
abline(v=RMN,col="red")
abline(v=EMN,col="green")
}
library(SDMTools)
library(hexbin)
setwd("~/SpiderOak Hive")
csv=read.csv("PDB1555_SV_INFO_Status_MFRsingleton_Q1-8aar_far_koffein_growth_v8_140713_MatPatHeight.csv",
header=T,sep=",",dec=".")
mh= csv$MaternalHeight
mw= csv$MaternalWeight
ph= csv$ï..PaternalHeight
smoothScatter(mh,ph)
setwd("C:/Users/Jon/Dropbox/GIT/CLEANING_MOBA_FILES")
